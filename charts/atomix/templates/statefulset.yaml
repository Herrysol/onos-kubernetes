apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "fullname" . }}-hs
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  replicas: {{ .Values.atomix.replicas }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
        - name: atomix
          imagePullPolicy: Never
          image: {{ .Values.atomixImage }}
          env:
            - name: ATOMIX_NODES
              value: {{ default "" .Values.atomix.replicas | quote }}
            - name: ATOMIX_LOG_LEVEL
              value: {{ default "INFO" .Values.atomix.logLevel | quote }}
            - name: ATOMIX_HEAP
              value: {{ default "3G" .Values.atomix.heap | quote }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
          ports:
            - name: client
              containerPort: 5678
            - name: server
              containerPort: 5679
          command:
            - sh
            - -c
            - "start-atomix \
              --nodes=$ATOMIX_NODES \
              --datadir=/var/lib/atomix/data \
              --loglevel=$ATOMIX_LOG_LEVEL \
              --heap=$ATOMIX_HEAP"
          livenessProbe:
            httpGet:
              path: /v1/status
              port: 5678
            initialDelaySeconds: 30
            timeoutSeconds: 5
          volumeMounts:
            - name: data
              mountPath: /var/lib/atomix
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
          {{- range $key, $value := .Values.persistence.annotations }}
          {{ $key }}: {{ $value }}
          {{- end }}
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
