apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "fullname" . }}-hs
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  replicas: {{ .Values.atomix.replicas }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "fullname" . }}
            topologyKey: kubernetes.io/hostname
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: ATOMIX_NODES
          value: {{ default "" .Values.atomix.replicas | quote }}
        - name: ATOMIX_LOG_LEVEL
          value: {{ default "INFO" .Values.atomix.logLevel | quote }}
        - name: ATOMIX_HEAP
          value: {{ default "2G" .Values.atomix.heap | quote }}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
        ports:
        - name: client
          containerPort: 5678
        - name: server
          containerPort: 5679
        command:
        - sh
        - -c
        - "bin/start-atomix \
          --nodes=$ATOMIX_NODES \
          --datadir=/var/lib/atomix/data \
          --loglevel=$ATOMIX_LOG_LEVEL \
          --heap=$ATOMIX_HEAP"
        readinessProbe:
          httpGet:
            path: /v1/status
            port: 5678
          initialDelaySeconds: 10
          timeoutSeconds: 10
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: /v1/status
            port: 5678
          initialDelaySeconds: 30
          timeoutSeconds: 10
        volumeMounts:
        - name: data
          mountPath: /var/lib/atomix
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . | quote }}
        {{- end }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
      {{- range $key, $value := .Values.persistence.annotations }}
      {{ $key }}: {{ $value }}
      {{- end }}
    spec:
      accessModes:
      {{- range .Values.persistence.accessModes }}
      - {{ . | quote }}
      {{- end }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
