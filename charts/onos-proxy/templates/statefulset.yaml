apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "fullname" . }}-hs
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  replicas: {{ .Values.proxy.replicas }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
      - name: onos-proxy
        image: {{ .Values.proxy.image }}
        imagePullPolicy: {{ .Values.proxy.imagePullPolicy }}
        env:
        - name: PROXY_NODES
          value: {{ default "" .Values.proxy.replicas | quote }}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
        ports:
        - name: openflow
          containerPort: {{ template "fullname" . }}-openflow
        - name: ovsdb
          containerPort: {{ template "fullname" . }}-ovsdb
        - name: east-west
          containerPort: {{ template "fullname" . }}-east-west
        - name: cli
          containerPort: {{ template "fullname" . }}-cli
        - name: ui
          containerPort: {{ template "fullname" . }}-ui
        command:
        - sh
        - -c
        - "start-proxy \
          --nodes=$PROXY_NODES
          --service=atomix
          --services=$ATOMIX_NODES
          --heap=$PROXY_HEAP"
        livenessProbe:
          httpGet:
            path: /v1/status
            port: 5678
          initialDelaySeconds: 30
          timeoutSeconds: 5
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
